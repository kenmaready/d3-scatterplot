{"version":3,"sources":["components/App.js","index.js"],"names":["App","req","XMLHttpRequest","open","send","onload","data","JSON","parse","responseText","map","entry","minutes","Math","floor","Seconds","seconds","time","Date","setMinutes","setSeconds","year","setFullYear","Year","name","Name","country","Nationality","doping","Doping","dopingText","firstYear","d3","d","lastYear","getFullYear","xScale","domain","range","width","lowestTime","getTime","highestTime","getSeconds","yScale","height","xAxis","yAxis","tickFormat","svg","append","attr","tooltip","style","selectAll","enter","on","i","transition","duration","html","getMinutes","padding","text","call","legend_x","legend_y","react_default","a","createElement","className","id","React","Component","ReactDOM","render","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.5b39e638.chunk.js","sourcesContent":["import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let req = new XMLHttpRequest();\r\n        let dataURL = \"https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json\";\r\n        req.open(\"GET\", dataURL, true);\r\n        req.send();\r\n        req.onload = () => {\r\n            let json = JSON.parse(req.responseText);\r\n            const data = json.map( (entry) => {\r\n                let minutes = Math.floor(entry.Seconds / 60);\r\n                let seconds = entry.Seconds % 60;\r\n                let time = new Date();\r\n                time.setMinutes(minutes);\r\n                time.setSeconds(seconds);\r\n                let year = new Date('January 1, 1960 00:00:00');\r\n                year.setFullYear(entry.Year);\r\n                return { name: entry.Name, country: entry.Nationality,\r\n                         time: time, seconds: entry.Seconds,\r\n                         year: year, doping: (entry.Doping===\"\" ? 0 : 1),\r\n                         dopingText: entry.Doping }\r\n            });\r\n\r\n            const width = 900;\r\n            const height = 600;\r\n            const padding = 60;\r\n            const doping_color = \"#ff5252\"\r\n            const no_doping_color = \"#607d8b\"\r\n\r\n            // set xScale to cover the years\r\n            let firstYear = new Date(d3.min(data, (d) => d.year));\r\n            let lastYear = new Date(d3.max(data, (d) => d.year));\r\n            firstYear.setFullYear(firstYear.getFullYear() - 1);\r\n            lastYear.setFullYear(lastYear.getFullYear() + 1);\r\n            const xScale = d3.scaleTime()\r\n                             .domain([firstYear, lastYear])\r\n                             .range([padding, width - padding]);\r\n\r\n            // set yScale to cover the times\r\n            let lowestTime = new Date((d3.min(data, (d) => d.time)).getTime());\r\n            let highestTime = new Date((d3.max(data, (d) => d.time)).getTime());\r\n            lowestTime.setSeconds(lowestTime.getSeconds() - 15);\r\n            highestTime.setSeconds(highestTime.getSeconds() + 15);\r\n            const yScale = d3.scaleTime()\r\n                             .domain([highestTime, lowestTime])\r\n                             .range([height - padding, padding]);\r\n\r\n            // define the axes\r\n            const xAxis = d3.axisBottom(xScale);\r\n            const yAxis = d3.axisLeft(yScale)\r\n                            .tickFormat(d3.timeFormat(\"%M:%S\"));\r\n            \r\n            // define the main svg\r\n            const svg = d3.select(\"#chart\")\r\n                          .append(\"svg\")\r\n                          .attr(\"preserveASpectRatio\", \"xMinYMin meet\")\r\n                          .attr(\"viewBox\", \"0 0 \" + width + \" \" + height)\r\n                          .attr(\"id\", \"chart-content\");\r\n\r\n            // define the tooltip object\r\n            const tooltip = d3.select(\"#chart\")\r\n                          .append(\"div\")\r\n                          .attr(\"class\", \"tooltip\")\r\n                          .attr(\"id\",\"tooltip\")\r\n                          .style(\"opacity\",0);\r\n\r\n            // add the datapoints\r\n            svg.selectAll(\"circle\")\r\n                .data(data)\r\n                .enter()\r\n                .append(\"circle\")\r\n                .attr(\"class\",\"dot\")\r\n                .attr(\"data-xvalue\", (d)=> d.year)\r\n                .attr(\"data-yvalue\", (d)=> d.time)\r\n                .attr(\"r\", 5)\r\n                .attr(\"cx\", (d) => xScale(d.year))\r\n                .attr(\"cy\", (d) => yScale(d.time))\r\n                .attr(\"fill\", (d) => (d.doping ? doping_color : no_doping_color) )\r\n                .on(\"mouseover\", (d,i) => {\r\n                    tooltip.transition()\r\n                           .duration(200)\r\n                           .style('opacity',.9);\r\n                     tooltip.html(`<strong>` + d.name + `</strong><br>\r\n                                   <strong>Time: </strong>` + d.time.getMinutes() + \":\" + d.time.getSeconds() + \r\n                                   `<br><strong>Country: </strong>` + d.country +\r\n                                   `<br>` + ((d.doping) ? d.dopingText : \"\"))\r\n                            .style('left', (padding + xScale(d.year)) + \"px\")\r\n                            .style('top', yScale(d.time) + \"px\")\r\n                            .attr(\"data-year\", d.year);\r\n                })\r\n                .on('mouseout', (d) => {\r\n                    tooltip.transition()\r\n                           .duration(200)\r\n                           .style('opacity',0);\r\n                })\r\n\r\n            svg.append(\"text\")\r\n               .attr(\"x\", (width/2))\r\n               .attr(\"y\", padding / 2)\r\n               .attr(\"text-anchor\", \"middle\")\r\n               .attr(\"font-size\", \"24px\")\r\n               .attr(\"id\",\"title\")\r\n               .text(\"Doping in Professional Cycling\");\r\n\r\n            svg.append(\"text\")\r\n               .attr(\"x\", (width/2))\r\n               .attr(\"y\", (padding / 2) + 30)\r\n               .attr(\"text-anchor\", \"middle\")\r\n               .attr(\"font-size\", \"18px\")\r\n               .text(\"35 Fastest Times Up the Alpe D'Huez\");\r\n\r\n            svg.append(\"g\")\r\n               .attr(\"transform\", \"translate(0,\" + (height - padding) + \")\")\r\n               .attr(\"id\", \"x-axis\")\r\n               .call(xAxis);\r\n\r\n            svg.append(\"g\")\r\n               .attr(\"transform\", \"translate(\" + padding + \", 0)\")\r\n               .attr(\"id\",\"y-axis\")\r\n               .call(yAxis);\r\n            \r\n            // handmade legend\r\n            const legend_x = width - padding - 120;\r\n            const legend_y = padding + 50;\r\n            svg.append(\"rect\").attr(\"x\", legend_x-20).attr(\"y\", legend_y-40).attr(\"width\",140).attr(\"height\", 80).style(\"fill\",\"lightgray\").attr(\"id\",\"legend\")\r\n            svg.append(\"text\").attr(\"x\",legend_x - 6).attr(\"y\", legend_y-16).text(\"legend:\")\r\n            svg.append(\"circle\").attr(\"cx\",legend_x).attr(\"cy\",legend_y).attr(\"r\",6).style(\"fill\", doping_color)\r\n            svg.append(\"circle\").attr(\"cx\",legend_x).attr(\"cy\",legend_y + 20).attr(\"r\",6).style(\"fill\", no_doping_color)\r\n            svg.append('text').attr(\"x\",legend_x + 12).attr(\"y\",legend_y + 4).text(\"doping\")\r\n            svg.append('text').attr(\"x\",legend_x + 12).attr(\"y\",legend_y + 20 + 4).text(\"no doping\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\">\r\n                <div className=\"ui segment\" id=\"chart-container\">\r\n                    <div id=\"chart\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './components/App.js';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}